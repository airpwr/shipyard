name: Build Packages

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  schedule:
  - cron: '9 2 */10 * *'

jobs:
  init:
    runs-on: windows-2022
    outputs:
      matrix: ${{ steps.init.outputs.matrix }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Analyze packages
      id: init
      run: |
        . .\src\main.ps1
        Save-WorkflowMatrix
        $matrix = Get-Content .matrix
        Write-Output "::set-output name=matrix::$matrix"

  build:
    needs: init
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.init.outputs.matrix)}}
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run ${{ matrix.package }}
      id: pkg
      run: |
        iex (iwr 'https://raw.githubusercontent.com/airpwr/airpwr/main/src/install.ps1')
        . .\src\main.ps1
        Invoke-PwrScript '${{ matrix.package }}'
        Write-Output "::set-output name=up-to-date::$($true -eq $PwrPackageConfig.UpToDate)"
        Write-Output "::set-output name=name::$($PwrPackageConfig.Name)"
        Write-Output "::set-output name=version::$($PwrPackageConfig.Version)"

    - name: Scan package
      if: ${{ steps.pkg.outputs.up-to-date == 'False'}}
      run: |
        . .\src\main.ps1
        Invoke-PwrPackageScan

    - name: Login to DockerHub
      if: ${{ github.ref == 'refs/heads/main' && steps.pkg.outputs.up-to-date == 'False'}}
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push container
      if: ${{ github.ref == 'refs/heads/main' && steps.pkg.outputs.up-to-date == 'False'}}
      run: |
        . .\src\main.ps1
        Invoke-DockerPush ${{ steps.pkg.outputs.name }} ${{ steps.pkg.outputs.version }}